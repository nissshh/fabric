Commands
cryptogen generate --config=./crypto-config.yaml
configtxgen -profile OneOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block
configtxgen -inspectBlock ./channel-artifacts/genesis.block > genesis.json
configtxgen -profile OneOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID foo
configtxgen -inspectChannelCreateTx ./channel-artifacts/channel.tx > channel-tx.json
configtxgen -profile OneOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID foo -asOrg Org1MSP

Copy MSPs
cd ~/work/fabric/org2
sudo scp -r dev@10.34.14.1:/home/dev/git/fabric/org2/crypto-config/ ~/work/fabric/org2/
sudo scp -r dev@10.34.14.1:/home/dev/git/fabric/oneOrgChannel/crypto-config/ordererOrganizations ~/work/fabric/org2/crypto-config
sudo scp -r dev@10.34.14.1:/home/dev/git/fabric/org2/configtx.yaml ~/work/fabric/org2/
sudo mkdir channel-artifacts
configtxgen -printOrg Org3MSP > ./channel-artifacts/org3.json

Go in to CLI
export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  && export CHANNEL_NAME=foo
export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/dev-ThinkCentre-A63/msp/tlscacerts/tlsca.example.com-cert.pem && export CHANNEL_NAME=foo


peer channel fetch config config_block.pb -o dev-thinkcentre-a63:7050 -c $CHANNEL_NAME --tls --cafile $ORDERER_CA
peer channel fetch config config_block.pb -o orderer.example.com:7050 -c $CHANNEL_NAME --tls --cafile $ORDERER_CA



SWARM
dev@dev-thinkcentre-a63:~/git/fabric/org2$ docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2hbn5v2xcrwu5hmr909cgzgq1o5wmacs29v2r7ydg7kclorvzr-6ilmxk36js0onwx1s9j6yz732 10.34.14.1:2377

dev@dev-thinkcentre-a63:~/git/fabric/org2$ docker node ls
ID                            HOSTNAME              STATUS              AVAILABILITY        MANAGER STATUS
9l833gxh3cssraptqgej39z3n     SYNL901761            Ready               Active              
422exu8a5g7c02d0i44tdm0n8 *   dev-thinkcentre-a63   Ready               Active              Leader
dev@dev-thinkcentre-a63:~/git/fabric/org2$ docker node ls
ID                            HOSTNAME              STATUS              AVAILABILITY        MANAGER STATUS
9l833gxh3cssraptqgej39z3n     SYNL901761            Ready               Active              
422exu8a5g7c02d0i44tdm0n8 *   dev-thinkcentre-a63   Ready               Active              Leader
dev@dev-thinkcentre-a63:~/git/fabric/org2$ docker node ls
ID                            HOSTNAME              STATUS              AVAILABILITY        MANAGER STATUS
9l833gxh3cssraptqgej39z3n     SYNL901761            Down                Active              
422exu8a5g7c02d0i44tdm0n8 *   dev-thinkcentre-a63   Ready               Active              Leader
dev@dev-thinkcentre-a63:~/git/fabric/org2$ docker node ls
ID                            HOSTNAME              STATUS              AVAILABILITY        MANAGER STATUS
9l833gxh3cssraptqgej39z3n     SYNL901761            Down                Active              
ipvqu7wilbq7rx6j7g9kw9zji     SYNL901761            Ready               Active              Reachable
422exu8a5g7c02d0i44tdm0n8 *   dev-thinkcentre-a63   Ready               Active              Leader

docker network create --attachable --driver overlay my-net


Orderer (No TLS)

docker run --rm -it --network="my-net" \
--name orderer.example.com -p 7050:7050 \
-e ORDERER_GENERAL_LOGLEVEL=debug \
-e ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 \
-e ORDERER_GENERAL_LISTENPORT=7050 \
-e ORDERER_GENERAL_GENESISMETHOD=file \
-e ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block \
-e ORDERER_GENERAL_LOCALMSPID=OrdererMSP \
-e ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp \
-e ORDERER_GENERAL_TLS_ENABLED=false \
-e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=my-net \
-v $(pwd)/channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block \
-v $(pwd)/crypto-config/ordererOrganizations/example.com/orderers/dev-ThinkCentre-A63/msp:/var/hyperledger/orderer/msp \
-w /opt/gopath/src/github.com/hyperledger/fabric hyperledger/fabric-orderer orderer

PEER

docker run --rm -it --link orderer.example.com:orderer.example.com --network="my-net" \
--name peer0.org1.example.com \
-p 8051:7051 \
-p 8053:7053 \
-e CORE_PEER_ADDRESSAUTODETECT=true \
-e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
-e CORE_LOGGING_LEVEL=DEBUG \
-e CORE_PEER_NETWORKID=peer0.org1.example.com \
-e CORE_NEXT=true \
-e CORE_PEER_ENDORSER_ENABLED=true \
-e CORE_PEER_ID=peer0.org1.example.com \
-e CORE_PEER_PROFILE_ENABLED=true \
-e CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer.example.com:7050 \
-e CORE_PEER_GOSSIP_IGNORESECURITY=true \
-e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=my-net \
-e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051 \
-e CORE_PEER_TLS_ENABLED=false \
-e CORE_PEER_GOSSIP_USELEADERELECTION=false \
-e CORE_PEER_GOSSIP_ORGLEADER=true \
-e CORE_PEER_LOCALMSPID=Org1MSP \
-v /var/run/:/host/var/run/ \
-v $(pwd)/crypto-config/peerOrganizations/org1.example.com/peers/dev-thinkcentre-a63/msp:/etc/hyperledger/fabric/msp \
-w /opt/gopath/src/github.com/hyperledger/fabric/peer \
hyperledger/fabric-peer \
peer node start


PEER 2

docker run --rm -it --network="my-net" --link orderer.example.com:orderer.example.com --link peer0.org1.example.com:peer0.org1.example.com \
--name peer1.org1.example.com \
-p 9051:7051 \
-p 9053:7053 \
-e CORE_PEER_ADDRESSAUTODETECT=true \
-e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
-e CORE_LOGGING_LEVEL=DEBUG \
-e CORE_PEER_NETWORKID=peer0.org2.example.com \
-e CORE_NEXT=true \
-e CORE_PEER_ENDORSER_ENABLED=true \
-e CORE_PEER_ID=peer1.org1.example.com \
-e CORE_PEER_PROFILE_ENABLED=true \
-e CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer.example.com:7050 \
-e CORE_PEER_GOSSIP_ORGLEADER=true \
-e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051 \
-e CORE_PEER_GOSSIP_IGNORESECURITY=true \
-e CORE_PEER_LOCALMSPID=Org1MSP \
-e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=my-net \
-e CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051 \
-e CORE_PEER_GOSSIP_USELEADERELECTION=false \
-e CORE_PEER_TLS_ENABLED=false \
-v /var/run/:/host/var/run/ \
-v $(pwd)/crypto-config/peerOrganizations/org2.example.com/peers/SYNL901761/msp:/etc/hyperledger/fabric/msp \
-w /opt/gopath/src/github.com/hyperledger/fabric/peer \
hyperledger/fabric-peer \
peer node start


CLI 
docker run --rm -it --network="my-net" \
--name cli \
--link orderer.example.com:orderer.example.com \
--link peer0.org1.example.com:peer0.org1.example.com \
--link peer0.org2.example.com:peer0.org2.example.com \
-p 12051:7051 \
-p 12053:7053 \
-e GOPATH=/opt/gopath \
-e CORE_PEER_LOCALMSPID=Org1MSP \
-e CORE_PEER_TLS_ENABLED=false \
-e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
-e CORE_LOGGING_LEVEL=DEBUG \
-e CORE_PEER_ID=cli \
-e CORE_PEER_ADDRESS=peer0.org1.example.com:7051 \
-e CORE_PEER_NETWORKID=cli \
-e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/	msp \
-e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=my-net  \
-v /var/run/:/host/var/run/ \
-v $(pwd)/chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go \
-v $(pwd)/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ \
-v $(pwd)/scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/ \
-v $(pwd)/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts \
-w /opt/gopath/src/github.com/hyperledger/fabric/peer \
hyperledger/fabric-tools \
/bin/bash

export CHANNEL_NAME=mychannel

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx >&log.txt




